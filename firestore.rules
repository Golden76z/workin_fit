rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Public read for exercises (system data)
    match /exercises/{exerciseId} {
      allow read: if true;
      allow write: if false; // Only backend scripts can write
    }
    
    // Public read for stretching routines
    match /stretchingRoutines/{routineId} {
      allow read: if true;
      allow write: if false;
    }
    
    // Programs - public read if public, write only by creator
    match /workoutPrograms/{programId} {
      allow read: if resource.data.isPublic == true || 
                     (request.auth != null && request.auth.uid == resource.data.createdBy);
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // User progress - private to user
    match /userProgress/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User completed sessions - private to user
    match /completedSessions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User saved programs - private to user
    match /userSavedPrograms/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User badges - private to user
    match /userBadges/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Public read for badges definitions
    match /badges/{badgeId} {
      allow read: if true;
      allow write: if false;
    }
    
    // Daily challenges - public read
    match /dailyChallenges/{date} {
      allow read: if true;
      allow write: if false;
    }
    
    // User challenge progress - private to user
    match /userChallengeProgress/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Friend challenges - participants can read/write
    match /friendChallenges/{challengeId} {
      allow read, write: if request.auth != null && 
                           request.auth.uid in resource.data.participants;
    }
    
    // Leaderboard - public read
    match /leaderboard/{type} {
      allow read: if true;
      allow write: if false;
    }
  }
}